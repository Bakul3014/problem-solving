# Code for DS HackerRank problem-  https://www.hackerrank.com/challenges/variable-sized-arrays/problem

# Suppose we have the following input:
# 2 2
# 3 1 5 4
# 5 1 2 8 9 3
# 0 1
# 1 3

# The first line 2 2 indicates that we have 2 arrays and 2 queries.
# The next lines describe the arrays:
# Array 1: [1, 5, 4]
# Array 2: [2, 8, 9, 3]
# The queries are:
# Find the value at index 1 of array 0.
# Find the value at index 3 of array 1.

# Now, let's process the queries:

# For the first query, we need to find the value at index 1 of array 0.
# Array 0 is [1, 5, 4], so the value at index 1 is 5.
# We print 5.

# For the second query, we need to find the value at index 3 of array 1.
# Array 1 is [2, 8, 9, 3], so the value at index 3 is 3.
# We print 3.

# The output should be:
# 5
# 3

# In summary, the problem requires you to read the arrays and then process queries to find specific elements within those arrays based on the provided indices. You output the values of these elements in the order of the queries.




your code here-



#include<bits/stdc++.h>
using namespace std;

int main()
{
    vector<vector<int>> arr;
    int n,q;
    cin>>n>>q;
    for(int i=0; i<n; i++)
    {
        int s,d;
        cin>>s;
        vector<int>row;
        for(int i=0; i<s; i++)
        {


            cin>>d;
            row.push_back(d);

        }
        arr.push_back(row);
    }
    int r,c;
    while(q--){
            int x,y;
        cin>>x>>y;
    cout<<arr[x][y]<<endl;
    }

    return 0;
}
